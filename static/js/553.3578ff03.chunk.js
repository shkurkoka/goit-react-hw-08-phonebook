"use strict";(self.webpackChunkgoit_react_hw_08_phonebook=self.webpackChunkgoit_react_hw_08_phonebook||[]).push([[553],{2553:function(e,n,t){t.r(n),t.d(n,{default:function(){return m}});var a=t(2791),r=t(9434),s=t(1538),i=t(3634),c=t(184),l=function(){var e=(0,r.v9)(s.K2),n=(0,r.I0)();return(0,c.jsxs)("form",{onSubmit:function(t){t.preventDefault();var a=t.currentTarget,r=a.elements.name.value,s=a.elements.number.value,c={name:r,number:s};e.some((function(e){return e.name.toLowerCase()===r.toLowerCase()}))?alert("Contact with this name already exists in the phonebook."):(n((0,i.uK)(c)),a.reset())},className:"form",children:[(0,c.jsxs)("label",{htmlFor:"name",className:"label",children:[(0,c.jsx)("span",{children:"Name"}),(0,c.jsx)("input",{type:"text",name:"name",className:"input-name",pattern:"^[a-zA-Z\u0430-\u044f\u0410-\u042f]+(([' -][a-zA-Z\u0430-\u044f\u0410-\u042f ])?[a-zA-Z\u0430-\u044f\u0410-\u042f]*)*$",title:"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan",required:!0})]}),(0,c.jsxs)("label",{htmlFor:"number",className:"label",children:[(0,c.jsx)("span",{children:"Phone Number"}),(0,c.jsx)("input",{type:"tel",name:"number",pattern:"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}",title:"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +",required:!0})]}),(0,c.jsx)("button",{type:"submit",className:"submit",children:"Add contact"})]})},o=function(e){var n=e.contact,t=(0,r.I0)();return(0,c.jsxs)("div",{children:[(0,c.jsxs)("span",{children:[n.name,": ",n.number]}),(0,c.jsx)("button",{className:"delete",onClick:function(){return t((0,i.GK)(n.id))},children:"Delete"})]})},u=function(){var e=(0,r.v9)(s.K2),n=(0,r.v9)(s.zK);return(0,c.jsx)("ul",{children:e.filter((function(e){return e.name.toLowerCase().includes((null===n||void 0===n?void 0:n.toLowerCase())||"")})).map((function(e){return(0,c.jsx)("li",{children:(0,c.jsx)(o,{contact:e})},e.id)}))})},d=function(){var e=(0,r.I0)();return(0,c.jsxs)("div",{children:[(0,c.jsx)("label",{htmlFor:"filter",children:"Find contacts by name"}),(0,c.jsx)("input",{type:"text",name:"filter",placeholder:"Search by name",onChange:function(n){return t=n.target.value,void e((0,s.Tv)(t));var t}})]})},m=(t(1743),function(){var e=(0,r.I0)(),n=(0,r.v9)(s.Vc),t=(0,r.v9)(s.by);return(0,a.useEffect)((function(){e((0,i.yF)())}),[e]),(0,c.jsxs)("div",{className:"main",children:[(0,c.jsxs)("div",{className:"first-wrap",children:[(0,c.jsx)("h1",{children:"Phonebook"}),(0,c.jsx)(l,{})]}),n&&!t?(0,c.jsx)("b",{children:"Request in progress..."}):(0,c.jsxs)("div",{className:"second-wrap",children:[(0,c.jsx)("h2",{children:"Contacts"}),(0,c.jsx)(d,{}),(0,c.jsx)(u,{})]})]})})},1743:function(){}}]);
//# sourceMappingURL=553.3578ff03.chunk.js.map