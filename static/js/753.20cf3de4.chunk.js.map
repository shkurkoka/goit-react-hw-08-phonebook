{"version":3,"file":"static/js/753.20cf3de4.chunk.js","mappings":"+MAAaA,EAAc,SAAAC,GAAK,OAAIA,EAAMC,SAASA,SAASC,KAA5B,EAEnBC,EAAe,SAAAH,GAAK,OAAIA,EAAMC,SAASA,SAASG,SAA5B,EAEpBC,EAAW,SAAAL,GAAK,OAAIA,EAAMC,SAASA,SAASK,KAA5B,EAEhBC,EAAY,SAAAP,GAAK,OAAIA,EAAMC,SAASO,MAAnB,E,kBCDjBC,EAAc,WACzB,IAAMR,GAAWS,EAAAA,EAAAA,IAAYX,GACvBY,GAAWC,EAAAA,EAAAA,MAqBjB,OACE,kBAAMC,SApBa,SAAAC,GACnBA,EAAIC,iBACJ,IAAMC,EAAOF,EAAIG,cACXC,EAAOF,EAAKG,SAASD,KAAKE,MAC1BC,EAAQL,EAAKG,SAASG,OAAOF,MAEdnB,EAASsB,MAC5B,SAACC,GAAD,OAAaA,EAAQN,KAAKO,gBAAkBP,EAAKO,aAAjD,IAIAC,MAAM,4DAIRf,GAASgB,EAAAA,EAAAA,IAAW,CAAET,KAAMA,EAAMG,MAAOA,KACzCL,EAAKY,QACN,EAG+BC,UAAU,OAAxC,WACE,kBAAOC,QAAQ,OAAf,mBACA,kBACEC,KAAK,OACLb,KAAK,OACLW,UAAU,aACVG,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,KAEV,kBAAOJ,QAAQ,SAAf,2BACA,kBACEC,KAAK,MACLb,KAAK,SACLc,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,KAEV,mBAAQH,KAAK,SAASF,UAAU,SAAhC,2BAGL,EC9CYM,EAAc,SAAC,GAAiB,IAAfX,EAAc,EAAdA,QACtBb,GAAWC,EAAAA,EAAAA,MAEjB,OACE,4BACE,4BAAOY,EAAQN,KAAf,KAAuBM,EAAQH,UAC/B,mBAAQQ,UAAU,SAASO,QAAS,kBAAMzB,GAAS0B,EAAAA,EAAAA,IAAcb,EAAQc,IAArC,EAApC,sBAKL,ECVYC,EAAc,WAEzB,IAAItC,GAAWS,EAAAA,EAAAA,IAAYX,GACvBS,GAASE,EAAAA,EAAAA,IAAYH,GASzB,OACE,wBAPON,EAASO,QAAO,SAAAgB,GAAO,OAC5BA,EAAQN,KAAKO,cAAce,UAAe,OAANhC,QAAM,IAANA,OAAA,EAAAA,EAAQiB,gBAAiB,GADjC,IAQLgB,KAAI,SAAAjB,GAAO,OAChC,yBACE,SAACW,EAAD,CAAaX,QAASA,KADfA,EAAQc,GADe,KAOvC,E,SCtBYI,EAAS,WACpB,IAAM/B,GAAWC,EAAAA,EAAAA,MAMjB,OACE,4BACE,kBAAOkB,QAAQ,SAAf,oCACA,kBACEC,KAAK,OACLb,KAAK,SACLyB,YAAY,iBACZC,SAAU,SAAC9B,GAAD,OAXYN,EAWgBM,EAAI+B,OAAOzB,WAVrDT,GAASmC,EAAAA,EAAAA,GAAUtC,IADM,IAACA,CAWZ,MAIjB,ECeD,G,OA1BiB,WACf,IAAMG,GAAWC,EAAAA,EAAAA,MACXR,GAAYM,EAAAA,EAAAA,IAAYP,GACxBG,GAAQI,EAAAA,EAAAA,IAAYL,GAM1B,OAJA0C,EAAAA,EAAAA,YAAU,WACRpC,GAASqC,EAAAA,EAAAA,MACV,GAAE,CAACrC,KAGF,iBAAKkB,UAAU,OAAf,WACE,iBAAKA,UAAU,aAAf,WACE,uCACA,SAACpB,EAAD,OAGAL,IAAcE,GAAQ,mDACtB,iBAAKuB,UAAU,cAAf,WACE,sCACA,SAACa,EAAD,KACA,SAACH,EAAD,SAKT,E","sources":["redux/contacts/selectors.js","components/phoneBook/ContactForm.jsx","components/phoneBook/ContactItem.jsx","components/phoneBook/ContactList.jsx","components/phoneBook/Filter.jsx","components/pages/Contacts.jsx"],"sourcesContent":["export const getContacts = state => state.contacts.contacts.items;\n\nexport const getIsLoading = state => state.contacts.contacts.isLoading;\n\nexport const getError = state => state.contacts.contacts.error;\n\nexport const getFilter = state => state.contacts.filter;","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getContacts } from \"../../redux/contacts/selectors\";\nimport { addContact } from \"../../redux/contacts/operations\";\n\nexport const ContactForm = () => {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.currentTarget;\n    const name = form.elements.name.value;\n    const phone = form.elements.number.value;\n\n    const isNameExists = contacts.some(\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (isNameExists) {\n      alert(\"Contact with this name already exists in the phonebook.\");\n      return;\n    }\n\n    dispatch(addContact({ name: name, phone: phone }));\n    form.reset();\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className=\"form\">\n      <label htmlFor=\"name\">Name</label>\n      <input\n        type=\"text\"\n        name=\"name\"\n        className=\"input-name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <label htmlFor=\"number\">Phone Number</label>\n      <input\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <button type=\"submit\" className=\"submit\">Add contact</button>\n    </form>\n  );\n}","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteContact } from \"../../redux/contacts/operations\";\n\nexport const ContactItem = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <span>{contact.name}: {contact.phone}</span>\n      <button className=\"delete\" onClick={() => dispatch(deleteContact(contact.id))}>\n        Delete\n      </button>\n    </div>\n  );\n};","import React from \"react\";\nimport {ContactItem} from \"./ContactItem\";\nimport { useSelector } from \"react-redux\";\nimport { getContacts, getFilter } from \"../../redux/contacts/selectors\";\n\nexport const ContactList = () => {\n\n  let contacts = useSelector(getContacts);\n  let filter = useSelector(getFilter);\n\n  const getFilteredContacts = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter?.toLowerCase() || \"\")\n    );\n  }\n\n\n  return (\n    <ul>\n      {getFilteredContacts().map(contact => (\n        <li key={contact.id}>\n          <ContactItem contact={contact} />\n        </li>\n      ))}\n    </ul>\n  );\n};","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setFilter } from \"../../redux/contacts/contactsSlice\";\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilterChange = (filter) => {\n    dispatch(setFilter(filter));\n  };\n  \n  return (\n    <div>\n      <label htmlFor=\"filter\">Find contacts by name</label>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Search by name\"\n        onChange={(evt) => handleFilterChange(evt.target.value)}\n      />\n    </div>\n  );\n};","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\n\nimport {ContactForm} from \"../phoneBook/ContactForm\";\nimport {ContactList} from \"../phoneBook/ContactList\";\nimport { Filter } from \"../phoneBook/Filter\";\nimport \"../phoneBook/phonebook.css\";\nimport { getError, getIsLoading } from \"redux/contacts/selectors\";\nimport { fetchContacts } from \"redux/contacts/operations\";\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className=\"main\">\n      <div className=\"first-wrap\">\n        <h1>Phonebook</h1>\n        <ContactForm/>\n      </div>\n      {\n        isLoading && !error ? <b>Request in progress...</b> : \n        <div className=\"second-wrap\">\n          <h2>Contacts</h2>\n          <Filter/>\n          <ContactList/>\n        </div>\n      }\n      </div>\n  );\n}\nexport default Contacts;"],"names":["getContacts","state","contacts","items","getIsLoading","isLoading","getError","error","getFilter","filter","ContactForm","useSelector","dispatch","useDispatch","onSubmit","evt","preventDefault","form","currentTarget","name","elements","value","phone","number","some","contact","toLowerCase","alert","addContact","reset","className","htmlFor","type","pattern","title","required","ContactItem","onClick","deleteContact","id","ContactList","includes","map","Filter","placeholder","onChange","target","setFilter","useEffect","fetchContacts"],"sourceRoot":""}